{"ast":null,"code":"// OrdersManagement.js\nimport React,{useState,useEffect}from'react';import'./OrdersManagement.css';// Initial list of orders\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const initialOrders=[{id:1,customerName:'Ajay',orderDate:'02-03-2024',status:'Pending'},{id:2,customerName:'Abhiram',orderDate:'05-03-2024',status:'Delivered'},{id:3,customerName:'Rohan',orderDate:'03-03-2024',status:'Processing'},{id:4,customerName:'Rithwik',orderDate:'29-02-2024',status:'Pending'},{id:5,customerName:'Uday',orderDate:'06-03-2024',status:'Processing'},{id:6,customerName:'Althaf',orderDate:'03-03-2024',status:'Delivered'},{id:7,customerName:'Mahammad',orderDate:'05-03-2024',status:'Processing'},{id:8,customerName:'Sonia',orderDate:'01-03-2024',status:'Delivered'}];const OrdersManagement=_ref=>{let{onOrderCountChange}=_ref;// State variables\nconst[orders,setOrders]=useState(initialOrders);const[selectedOrderId,setSelectedOrderId]=useState(null);const[editMode,setEditMode]=useState(false);const[updatedStatus,setUpdatedStatus]=useState('');const[statusOptions]=useState(['Pending','Processing','Delivered','Cancelled']);// Function to calculate the total number of orders\nconst calculateOrderCount=()=>{return orders.length;};// Function to handle viewing order details\nconst handleViewDetails=orderId=>{setSelectedOrderId(orderId);setEditMode(false);};// Function to handle updating order status\nconst handleUpdateStatus=()=>{if(selectedOrderId&&updatedStatus){const updatedOrders=orders.map(order=>order.id===selectedOrderId?{...order,status:updatedStatus}:order);setOrders(updatedOrders);setEditMode(false);}};// Function to handle deleting an order\nconst handleDeleteOrder=orderId=>{const updatedOrders=orders.filter(order=>order.id!==orderId);setOrders(updatedOrders);setSelectedOrderId(null);onOrderCountChange(calculateOrderCount());// Notify parent component of updated order count\n};// Function to handle changing status in edit mode\nconst handleStatusChange=e=>{setUpdatedStatus(e.target.value);};// Effect to update order count whenever orders change\nuseEffect(()=>{onOrderCountChange(calculateOrderCount());});return/*#__PURE__*/_jsxs(\"div\",{className:\"orders-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Orders Management\"}),/*#__PURE__*/_jsx(\"div\",{className:\"order-list\",children:/*#__PURE__*/_jsx(\"ul\",{children:orders.map(order=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Order ID: \",order.id]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Customer: \",order.customerName]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Date: \",order.orderDate]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Status: \",order.status]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewDetails(order.id),children:\"View Details\"})]},order.id))})}),selectedOrderId!==null&&/*#__PURE__*/_jsxs(\"div\",{className:\"order-details\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Order Details\"}),editMode?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Order ID:\"}),\" \",selectedOrderId]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Customer:\"}),\" \",orders.find(order=>order.id===selectedOrderId).customerName]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date:\"}),\" \",orders.find(order=>order.id===selectedOrderId).orderDate]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),/*#__PURE__*/_jsx(\"select\",{value:updatedStatus,onChange:handleStatusChange,children:statusOptions.map(status=>/*#__PURE__*/_jsx(\"option\",{value:status,children:status},status))})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUpdateStatus,children:\"Update\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Order ID:\"}),\" \",selectedOrderId]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Customer:\"}),\" \",orders.find(order=>order.id===selectedOrderId).customerName]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date:\"}),\" \",orders.find(order=>order.id===selectedOrderId).orderDate]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" \",orders.find(order=>order.id===selectedOrderId).status]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setEditMode(true),children:\"Edit Status\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteOrder(selectedOrderId),children:\"Delete Order\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedOrderId(null),children:\"Close\"})]})]});};export default OrdersManagement;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","initialOrders","id","customerName","orderDate","status","OrdersManagement","_ref","onOrderCountChange","orders","setOrders","selectedOrderId","setSelectedOrderId","editMode","setEditMode","updatedStatus","setUpdatedStatus","statusOptions","calculateOrderCount","length","handleViewDetails","orderId","handleUpdateStatus","updatedOrders","map","order","handleDeleteOrder","filter","handleStatusChange","e","target","value","className","children","onClick","find","onChange"],"sources":["D:/Btech/Project/ERP/planning/src/Components/OrdersManagement.js"],"sourcesContent":["// OrdersManagement.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './OrdersManagement.css';\r\n\r\n// Initial list of orders\r\nconst initialOrders = [\r\n  { id: 1, customerName: 'Ajay', orderDate: '02-03-2024', status: 'Pending' },\r\n  { id: 2, customerName: 'Abhiram', orderDate: '05-03-2024', status: 'Delivered' },\r\n  { id: 3, customerName: 'Rohan', orderDate: '03-03-2024', status: 'Processing' },\r\n  { id: 4, customerName: 'Rithwik', orderDate: '29-02-2024', status: 'Pending' },\r\n  { id: 5, customerName: 'Uday', orderDate: '06-03-2024', status: 'Processing' },\r\n  { id: 6, customerName: 'Althaf', orderDate: '03-03-2024', status: 'Delivered' },\r\n  { id: 7, customerName: 'Mahammad', orderDate: '05-03-2024', status: 'Processing' },\r\n  { id: 8, customerName: 'Sonia', orderDate: '01-03-2024', status: 'Delivered' },\r\n];\r\n\r\nconst OrdersManagement = ({ onOrderCountChange }) => {\r\n  // State variables\r\n  const [orders, setOrders] = useState(initialOrders);\r\n  const [selectedOrderId, setSelectedOrderId] = useState(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [updatedStatus, setUpdatedStatus] = useState('');\r\n  const [statusOptions] = useState(['Pending', 'Processing', 'Delivered', 'Cancelled']);\r\n\r\n  // Function to calculate the total number of orders\r\n  const calculateOrderCount = () => {\r\n    return orders.length;\r\n  };\r\n\r\n  // Function to handle viewing order details\r\n  const handleViewDetails = (orderId) => {\r\n    setSelectedOrderId(orderId);\r\n    setEditMode(false);\r\n  };\r\n\r\n  // Function to handle updating order status\r\n  const handleUpdateStatus = () => {\r\n    if (selectedOrderId && updatedStatus) {\r\n      const updatedOrders = orders.map(order =>\r\n        order.id === selectedOrderId ? { ...order, status: updatedStatus } : order\r\n      );\r\n      setOrders(updatedOrders);\r\n      setEditMode(false);\r\n    }\r\n  };\r\n\r\n  // Function to handle deleting an order\r\n  const handleDeleteOrder = (orderId) => {\r\n    const updatedOrders = orders.filter(order => order.id !== orderId);\r\n    setOrders(updatedOrders);\r\n    setSelectedOrderId(null);\r\n    onOrderCountChange(calculateOrderCount()); // Notify parent component of updated order count\r\n  };\r\n\r\n  // Function to handle changing status in edit mode\r\n  const handleStatusChange = (e) => {\r\n    setUpdatedStatus(e.target.value);\r\n  };\r\n\r\n  // Effect to update order count whenever orders change\r\n  useEffect(() => {\r\n    onOrderCountChange(calculateOrderCount());\r\n  });\r\n\r\n  return (\r\n    <div className=\"orders-container\">\r\n      <h1>Orders Management</h1>\r\n      <div className=\"order-list\">\r\n        <ul>\r\n          {orders.map(order => (\r\n            <li key={order.id}>\r\n              <span>Order ID: {order.id}</span>\r\n              <span>Customer: {order.customerName}</span>\r\n              <span>Date: {order.orderDate}</span>\r\n              <span>Status: {order.status}</span>\r\n              <button onClick={() => handleViewDetails(order.id)}>View Details</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      {selectedOrderId !== null && (\r\n        <div className=\"order-details\">\r\n          <h3>Order Details</h3>\r\n          {editMode ? (\r\n            <>\r\n              <p><strong>Order ID:</strong> {selectedOrderId}</p>\r\n              <p><strong>Customer:</strong> {orders.find(order => order.id === selectedOrderId).customerName}</p>\r\n              <p><strong>Date:</strong> {orders.find(order => order.id === selectedOrderId).orderDate}</p>\r\n              <p><strong>Status:</strong> \r\n                <select value={updatedStatus} onChange={handleStatusChange}>\r\n                  {statusOptions.map(status => (\r\n                    <option key={status} value={status}>{status}</option>\r\n                  ))}\r\n                </select>\r\n              </p>\r\n              <button onClick={handleUpdateStatus}>Update</button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p><strong>Order ID:</strong> {selectedOrderId}</p>\r\n              <p><strong>Customer:</strong> {orders.find(order => order.id === selectedOrderId).customerName}</p>\r\n              <p><strong>Date:</strong> {orders.find(order => order.id === selectedOrderId).orderDate}</p>\r\n              <p><strong>Status:</strong> {orders.find(order => order.id === selectedOrderId).status}</p>\r\n              <button onClick={() => setEditMode(true)}>Edit Status</button>\r\n            </>\r\n          )}\r\n          <button onClick={() => handleDeleteOrder(selectedOrderId)}>Delete Order</button>\r\n          <button onClick={() => setSelectedOrderId(null)}>Close</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrdersManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}