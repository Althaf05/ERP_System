{"ast":null,"code":"// ProductsManagement.js\nimport React,{useState,useEffect}from'react';import'./ProductsManagement.css';// Initial list of products\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const initialProducts=[{id:1,name:'Product 1',category:'Category 1',price:10,stockQuantity:30},{id:2,name:'Product 2',category:'Category 2',price:20,stockQuantity:50},{id:3,name:'Product 3',category:'Category 1',price:15,stockQuantity:75},{id:4,name:'Product 4',category:'Category 5',price:18,stockQuantity:90},{id:5,name:'Product 5',category:'Category 7',price:54,stockQuantity:21},{id:6,name:'Product 6',category:'Category 2',price:59,stockQuantity:32},{id:7,name:'Product 7',category:'Category 2',price:40,stockQuantity:54},{id:8,name:'Product 8',category:'Category 3',price:54,stockQuantity:75},{id:9,name:'Product 9',category:'Category 3',price:95,stockQuantity:35},{id:10,name:'Product 10',category:'Category 3',price:32,stockQuantity:75}];const ProductsManagement=_ref=>{let{onProductCountChange}=_ref;// State variables\nconst[products,setProducts]=useState(initialProducts);const[formData,setFormData]=useState({id:'',name:'',category:'',price:'',stockQuantity:''});// Effect to update product count whenever products change\nuseEffect(()=>{onProductCountChange(products.length);},[products,onProductCountChange]);// Function to handle form input change\nconst handleChange=e=>{let value=e.target.value;if(e.target.name==='price'||e.target.name==='stockQuantity'){value=Math.max(1,parseInt(value));}setFormData({...formData,[e.target.name]:value});};// Function to handle form submission\nconst handleSubmit=e=>{e.preventDefault();if(formData.id){// Editing an existing product\nconst updatedProducts=products.map(product=>product.id===formData.id?formData:product);setProducts(updatedProducts);}else{// Adding a new product\nconst newProduct={...formData,id:Date.now()};setProducts([...products,newProduct]);}// Clear form data after submission\nsetFormData({id:'',name:'',category:'',price:'',stockQuantity:''});};// Function to handle editing a product\nconst handleEdit=productId=>{const editedProduct=products.find(product=>product.id===productId);setFormData(editedProduct);};// Function to handle deleting a product\nconst handleDelete=productId=>{const updatedProducts=products.filter(product=>product.id!==productId);setProducts(updatedProducts);};return/*#__PURE__*/_jsxs(\"div\",{className:\"products\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Products Management\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:formData.name,placeholder:\"Product Name\",onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"category\",value:formData.category,placeholder:\"Category\",onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"price\",value:formData.price,placeholder:\"Price\",onChange:handleChange,min:\"0\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"stockQuantity\",value:formData.stockQuantity,placeholder:\"Stock Quantity\",onChange:handleChange,min:\"1\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:formData.id?'Update Product':'Add Product'})]}),/*#__PURE__*/_jsx(\"ul\",{children:products.map(product=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"span\",{children:[product.name,\" - \",product.category,\" - $\",product.price,\" - \",product.stockQuantity,\" in stock\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEdit(product.id),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(product.id),children:\"Delete\"})]},product.id))})]});};export default ProductsManagement;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","initialProducts","id","name","category","price","stockQuantity","ProductsManagement","_ref","onProductCountChange","products","setProducts","formData","setFormData","length","handleChange","e","value","target","Math","max","parseInt","handleSubmit","preventDefault","updatedProducts","map","product","newProduct","Date","now","handleEdit","productId","editedProduct","find","handleDelete","filter","className","children","onSubmit","type","placeholder","onChange","required","min","onClick"],"sources":["D:/Btech/Project/ERP/planning/src/Components/ProductsManagement.js"],"sourcesContent":["// ProductsManagement.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './ProductsManagement.css';\r\n\r\n// Initial list of products\r\nconst initialProducts = [\r\n  { id: 1, name: 'Product 1', category: 'Category 1', price: 10, stockQuantity: 30 },\r\n  { id: 2, name: 'Product 2', category: 'Category 2', price: 20, stockQuantity: 50 },\r\n  { id: 3, name: 'Product 3', category: 'Category 1', price: 15, stockQuantity: 75 },\r\n  { id: 4, name: 'Product 4', category: 'Category 5', price: 18, stockQuantity: 90 },\r\n  { id: 5, name: 'Product 5', category: 'Category 7', price: 54, stockQuantity: 21 },\r\n  { id: 6, name: 'Product 6', category: 'Category 2', price: 59, stockQuantity: 32 },\r\n  { id: 7, name: 'Product 7', category: 'Category 2', price: 40, stockQuantity: 54 },\r\n  { id: 8, name: 'Product 8', category: 'Category 3', price: 54, stockQuantity: 75 },\r\n  { id: 9, name: 'Product 9', category: 'Category 3', price: 95, stockQuantity: 35 },\r\n  { id: 10, name: 'Product 10', category: 'Category 3', price: 32, stockQuantity: 75 },\r\n];\r\n\r\nconst ProductsManagement = ({ onProductCountChange }) => {\r\n  // State variables\r\n  const [products, setProducts] = useState(initialProducts);\r\n  const [formData, setFormData] = useState({\r\n    id: '',\r\n    name: '',\r\n    category: '',\r\n    price: '',\r\n    stockQuantity: ''\r\n  });\r\n\r\n  // Effect to update product count whenever products change\r\n  useEffect(() => {\r\n    onProductCountChange(products.length);\r\n  }, [products, onProductCountChange]);\r\n\r\n  // Function to handle form input change\r\n  const handleChange = (e) => {\r\n    let value = e.target.value;\r\n    if (e.target.name === 'price' || e.target.name === 'stockQuantity') {\r\n      value = Math.max(1, parseInt(value)); \r\n    }\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: value\r\n    });\r\n  };\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (formData.id) {\r\n      // Editing an existing product\r\n      const updatedProducts = products.map(product =>\r\n        product.id === formData.id ? formData : product\r\n      );\r\n      setProducts(updatedProducts);\r\n    } else {\r\n      // Adding a new product\r\n      const newProduct = { ...formData, id: Date.now() };\r\n      setProducts([...products, newProduct]);\r\n    }\r\n    // Clear form data after submission\r\n    setFormData({\r\n      id: '',\r\n      name: '',\r\n      category: '',\r\n      price: '',\r\n      stockQuantity: ''\r\n    });\r\n  };\r\n\r\n  // Function to handle editing a product\r\n  const handleEdit = (productId) => {\r\n    const editedProduct = products.find(product => product.id === productId);\r\n    setFormData(editedProduct);\r\n  };\r\n\r\n  // Function to handle deleting a product\r\n  const handleDelete = (productId) => {\r\n    const updatedProducts = products.filter(product => product.id !== productId);\r\n    setProducts(updatedProducts);\r\n  };\r\n\r\n  return (\r\n    <div className=\"products\">\r\n      <h1>Products Management</h1>\r\n      {/* Product form */}\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" name=\"name\" value={formData.name} placeholder=\"Product Name\" onChange={handleChange} required />\r\n        <input type=\"text\" name=\"category\" value={formData.category} placeholder=\"Category\" onChange={handleChange} required />\r\n        <input type=\"number\" name=\"price\" value={formData.price} placeholder=\"Price\" onChange={handleChange} min=\"0\" required />\r\n        <input type=\"number\" name=\"stockQuantity\" value={formData.stockQuantity} placeholder=\"Stock Quantity\" onChange={handleChange} min=\"1\" required />\r\n        <button type=\"submit\">{formData.id ? 'Update Product' : 'Add Product'}</button>\r\n      </form>\r\n      {/* Product list */}\r\n      <ul>\r\n        {products.map(product => (\r\n          <li key={product.id}>\r\n            <span>{product.name} - {product.category} - ${product.price} - {product.stockQuantity} in stock</span>\r\n            <button onClick={() => handleEdit(product.id)}>Edit</button>\r\n            <button onClick={() => handleDelete(product.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductsManagement;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}