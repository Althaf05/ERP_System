{"ast":null,"code":"var _jsxFileName = \"D:\\\\Btech\\\\Project\\\\ERP\\\\planning\\\\src\\\\Components\\\\OrdersManagement.js\",\n  _s = $RefreshSig$();\n// components/OrdersManagement.js\nimport React, { useState } from 'react';\nimport './OrdersManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialOrders = [{\n  id: 1,\n  customerName: 'John Doe',\n  orderDate: '2024-03-11',\n  status: 'Pending'\n}, {\n  id: 2,\n  customerName: 'Jane Smith',\n  orderDate: '2024-03-10',\n  status: 'Delivered'\n}, {\n  id: 3,\n  customerName: 'Alice Johnson',\n  orderDate: '2024-03-09',\n  status: 'Processing'\n}];\nconst OrdersManagement = () => {\n  _s();\n  const [orders, setOrders] = useState(initialOrders);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const [statusOptions] = useState(['Pending', 'Processing', 'Delivered', 'Cancelled']);\n  const handleViewDetails = order => {\n    setSelectedOrder(order);\n  };\n  const handleUpdateStatus = (orderId, newStatus) => {\n    const updatedOrders = orders.map(order => order.id === orderId ? {\n      ...order,\n      status: newStatus\n    } : order);\n    setOrders(updatedOrders);\n    setEditMode(false); // Exit edit mode after updating status\n  };\n  const handleDeleteOrder = orderId => {\n    const updatedOrders = orders.filter(order => order.id !== orderId);\n    setOrders(updatedOrders);\n    setSelectedOrder(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orders-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Orders Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Order ID: \", order.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Customer: \", order.customerName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Date: \", order.orderDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Status: \", order.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleViewDetails(order),\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, order.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), selectedOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Order Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Order ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 14\n        }, this), \" \", selectedOrder.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Customer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 14\n        }, this), \" \", selectedOrder.customerName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 14\n        }, this), \" \", selectedOrder.orderDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 14\n        }, this), editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedOrder.status,\n            onChange: e => handleUpdateStatus(selectedOrder.id, e.target.value),\n            children: statusOptions.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status,\n              children: status\n            }, status, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdateStatus(selectedOrder.id, selectedOrder.status),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : selectedOrder.status, !editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditMode(true),\n          children: \"Edit Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteOrder(selectedOrder.id),\n        children: \"Delete Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedOrder(null),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdersManagement, \"F7GfzVbnOjQltksulshBxlVHwSs=\");\n_c = OrdersManagement;\nexport default OrdersManagement;\nvar _c;\n$RefreshReg$(_c, \"OrdersManagement\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","initialOrders","id","customerName","orderDate","status","OrdersManagement","_s","orders","setOrders","selectedOrder","setSelectedOrder","editMode","setEditMode","statusOptions","handleViewDetails","order","handleUpdateStatus","orderId","newStatus","updatedOrders","map","handleDeleteOrder","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/Btech/Project/ERP/planning/src/Components/OrdersManagement.js"],"sourcesContent":["// components/OrdersManagement.js\r\nimport React, { useState } from 'react';\r\nimport './OrdersManagement.css';\r\n\r\nconst initialOrders = [\r\n  { id: 1, customerName: 'John Doe', orderDate: '2024-03-11', status: 'Pending' },\r\n  { id: 2, customerName: 'Jane Smith', orderDate: '2024-03-10', status: 'Delivered' },\r\n  { id: 3, customerName: 'Alice Johnson', orderDate: '2024-03-09', status: 'Processing' }\r\n];\r\n\r\nconst OrdersManagement = () => {\r\n  const [orders, setOrders] = useState(initialOrders);\r\n  const [selectedOrder, setSelectedOrder] = useState(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [statusOptions] = useState(['Pending', 'Processing', 'Delivered', 'Cancelled']);\r\n\r\n  const handleViewDetails = (order) => {\r\n    setSelectedOrder(order);\r\n  };\r\n\r\n  const handleUpdateStatus = (orderId, newStatus) => {\r\n    const updatedOrders = orders.map(order =>\r\n      order.id === orderId ? { ...order, status: newStatus } : order\r\n    );\r\n    setOrders(updatedOrders);\r\n    setEditMode(false); // Exit edit mode after updating status\r\n  };\r\n\r\n  const handleDeleteOrder = (orderId) => {\r\n    const updatedOrders = orders.filter(order => order.id !== orderId);\r\n    setOrders(updatedOrders);\r\n    setSelectedOrder(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"orders-container\">\r\n      <h2>Orders Management</h2>\r\n      <div className=\"order-list\">\r\n        <ul>\r\n          {orders.map(order => (\r\n            <li key={order.id}>\r\n              <span>Order ID: {order.id}</span>\r\n              <span>Customer: {order.customerName}</span>\r\n              <span>Date: {order.orderDate}</span>\r\n              <span>Status: {order.status}</span>\r\n              <button onClick={() => handleViewDetails(order)}>View Details</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      {selectedOrder && (\r\n        <div className=\"order-details\">\r\n          <h3>Order Details</h3>\r\n          <p><strong>Order ID:</strong> {selectedOrder.id}</p>\r\n          <p><strong>Customer:</strong> {selectedOrder.customerName}</p>\r\n          <p><strong>Date:</strong> {selectedOrder.orderDate}</p>\r\n          <p><strong>Status:</strong> \r\n            {editMode ? (\r\n              <>\r\n                <select value={selectedOrder.status} onChange={(e) => handleUpdateStatus(selectedOrder.id, e.target.value)}>\r\n                  {statusOptions.map(status => (\r\n                    <option key={status} value={status}>{status}</option>\r\n                  ))}\r\n                </select>\r\n                <button onClick={() => handleUpdateStatus(selectedOrder.id, selectedOrder.status)}>Update</button>\r\n              </>\r\n            ) : (\r\n              selectedOrder.status\r\n            )}\r\n            {!editMode && (\r\n              <button onClick={() => setEditMode(true)}>Edit Status</button>\r\n            )}\r\n          </p>\r\n          <button onClick={() => handleDeleteOrder(selectedOrder.id)}>Delete Order</button>\r\n          <button onClick={() => setSelectedOrder(null)}>Close</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrdersManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}