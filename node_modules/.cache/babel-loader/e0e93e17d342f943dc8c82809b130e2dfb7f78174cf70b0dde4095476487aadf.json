{"ast":null,"code":"var _jsxFileName = \"D:\\\\Btech\\\\Project\\\\ERP\\\\planning\\\\src\\\\Components\\\\OrdersCalendarView.js\",\n  _s = $RefreshSig$();\n// components/OrdersCalendarView.js\nimport React, { useState } from 'react';\nimport './OrdersCalendarView.css';\n\n// Sample orders data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialOrders = [{\n  id: 1,\n  customerName: 'John Doe',\n  deliveryDate: '11/03/24',\n  status: 'Pending'\n}, {\n  id: 2,\n  customerName: 'Jane Smith',\n  deliveryDate: '10/03/24',\n  status: 'Delivered'\n}, {\n  id: 3,\n  customerName: 'Alice Johnson',\n  deliveryDate: '09/03/24',\n  status: 'Processing'\n}, {\n  id: 4,\n  customerName: 'Bob Johnson',\n  deliveryDate: '11/03/24',\n  status: 'Processing'\n}];\nconst OrdersCalendarView = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [ordersForSelectedDate, setOrdersForSelectedDate] = useState([]);\n  const orders = initialOrders; // Replace with actual orders data\n\n  const handleDateClick = date => {\n    setSelectedDate(date);\n    const ordersForDate = orders.filter(order => order.deliveryDate === date);\n    setOrdersForSelectedDate(ordersForDate);\n  };\n  const calendarData = getCalendarData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Orders Calendar View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-for-date\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Orders for \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [ordersForSelectedDate.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Order ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), \" \", order.id, \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Customer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 56\n          }, this), \" \", order.customerName, \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 105\n          }, this), \" \", order.status]\n        }, order.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)), \" const getCalendarData = () => \", \"; // Your logic for handling month/year change\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdersCalendarView, \"C/MfzftHyUfximh7S/ugq2kv4H8=\");\n_c = OrdersCalendarView;\nexport default OrdersCalendarView;\nvar _c;\n$RefreshReg$(_c, \"OrdersCalendarView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialOrders","id","customerName","deliveryDate","status","OrdersCalendarView","_s","selectedDate","setSelectedDate","ordersForSelectedDate","setOrdersForSelectedDate","orders","handleDateClick","date","ordersForDate","filter","order","calendarData","getCalendarData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["D:/Btech/Project/ERP/planning/src/Components/OrdersCalendarView.js"],"sourcesContent":["// components/OrdersCalendarView.js\r\nimport React, { useState } from 'react';\r\nimport './OrdersCalendarView.css';\r\n\r\n// Sample orders data\r\nconst initialOrders = [\r\n  { id: 1, customerName: 'John Doe', deliveryDate: '11/03/24', status: 'Pending' },\r\n  { id: 2, customerName: 'Jane Smith', deliveryDate: '10/03/24', status: 'Delivered' },\r\n  { id: 3, customerName: 'Alice Johnson', deliveryDate: '09/03/24', status: 'Processing' },\r\n  { id: 4, customerName: 'Bob Johnson', deliveryDate: '11/03/24', status: 'Processing' },\r\n];\r\n\r\nconst OrdersCalendarView = () => {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [ordersForSelectedDate, setOrdersForSelectedDate] = useState([]);\r\n  \r\n  const orders = initialOrders; // Replace with actual orders data\r\n\r\n  const handleDateClick = (date) => {\r\n    setSelectedDate(date);\r\n    const ordersForDate = orders.filter(order => order.deliveryDate === date);\r\n    setOrdersForSelectedDate(ordersForDate);\r\n  };\r\n\r\n \r\n  const calendarData = getCalendarData();\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <h2>Orders Calendar View</h2>\r\n      <div className=\"calendar-grid\">\r\n        {/* Your calendar grid */}\r\n      </div>\r\n      {selectedDate && (\r\n        <div className=\"orders-for-date\">\r\n          <h3>Orders for {selectedDate}</h3>\r\n          <ul>\r\n            {ordersForSelectedDate.map(order => (\r\n              <li key={order.id}>\r\n                <strong>Order ID:</strong> {order.id}, <strong>Customer:</strong> {order.customerName}, <strong>Status:</strong> {order.status}\r\n              </li>\r\n            ))} const getCalendarData = () => {\r\n    // Your logic for generating calendar data\r\n  };\r\n\r\n  // Your logic for handling month/year change\r\n\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdersCalendarView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}