{"ast":null,"code":"var _jsxFileName = \"D:\\\\Btech\\\\Project\\\\ERP\\\\planning\\\\src\\\\Components\\\\OrdersManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockOrders = [{\n  id: 1,\n  customer: 'Customer 1',\n  date: '2024-03-08',\n  // Today's date for demonstration\n  items: [{\n    name: 'Product A',\n    quantity: 2\n  }],\n  total: 200,\n  status: 'Pending'\n}, {\n  id: 2,\n  customer: 'Customer 2',\n  date: '2024-03-06',\n  items: [{\n    name: 'Product B',\n    quantity: 1\n  }],\n  total: 50,\n  status: 'Shipped'\n}\n// ...\n];\nfunction OrdersManagement() {\n  _s();\n  const [orders, setOrders] = useState(mockOrders);\n  const [selectedOrderId, setSelectedOrderId] = useState(null);\n  const [selectedOrderDetails, setSelectedOrderDetails] = useState(null);\n  const [currentDate, setCurrentDate] = useState(new Date()); // Today's date\n\n  const handleViewOrderDetails = orderId => {\n    const orderDetails = orders.find(order => order.id === orderId);\n    setSelectedOrderId(orderId);\n    setSelectedOrderDetails(orderDetails);\n  };\n  const handleUpdateOrderStatus = (orderId, newStatus) => {\n    const updatedOrders = orders.map(order => order.id === orderId ? {\n      ...order,\n      status: newStatus\n    } : order);\n    setOrders(updatedOrders);\n  };\n  const handleDeleteOrder = orderId => {\n    const confirmed = window.confirm('Are you sure you want to delete this order?');\n    if (confirmed) {\n      const updatedOrders = orders.filter(order => order.id !== orderId);\n      setOrders(updatedOrders);\n      setSelectedOrderId(null);\n      setSelectedOrderDetails(null);\n    }\n  };\n  const getOrderDate = order => new Date(order.date);\n  const renderOrderCalendar = () => {\n    const month = currentDate.getMonth();\n    const year = currentDate.getFullYear();\n    const firstDay = new Date(year, month, 1);\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const calendarRows = [];\n    let currentDay = 1;\n    let currentRow = [];\n    while (currentDay <= daysInMonth || currentRow.length < 7) {\n      const date = new Date(year, month, currentDay);\n      const formattedDate = date.toISOString().slice(0, 10); // YYYY-MM-DD\n\n      const orderForDate = orders.find(order => getOrderDate(order).getTime() === date.getTime());\n      currentRow.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `day ${orderForDate ? 'active' : ''}`,\n        children: [currentDay, orderForDate && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"order-indicator\",\n          onClick: () => handleViewOrderDetails(orderForDate.id),\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, formattedDate, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this));\n      if (currentDay === daysInMonth || currentRow.length === 7) {\n        calendarRows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-row\",\n          children: currentRow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 27\n        }, this));\n        currentRow = [];\n      }\n      currentDay++;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-calendar\",\n      children: calendarRows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Orders Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), renderOrderCalendar(), /*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(OrdersManagement, \"0274M3msnhcsXRvf8YJtLaGaXpw=\");\n_c = OrdersManagement;\nexport default OrdersManagement;\nvar _c;\n$RefreshReg$(_c, \"OrdersManagement\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","mockOrders","id","customer","date","items","name","quantity","total","status","OrdersManagement","_s","orders","setOrders","selectedOrderId","setSelectedOrderId","selectedOrderDetails","setSelectedOrderDetails","currentDate","setCurrentDate","Date","handleViewOrderDetails","orderId","orderDetails","find","order","handleUpdateOrderStatus","newStatus","updatedOrders","map","handleDeleteOrder","confirmed","window","confirm","filter","getOrderDate","renderOrderCalendar","month","getMonth","year","getFullYear","firstDay","daysInMonth","getDate","calendarRows","currentDay","currentRow","length","formattedDate","toISOString","slice","orderForDate","getTime","push","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Btech/Project/ERP/planning/src/Components/OrdersManagement.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst mockOrders = [\r\n  {\r\n    id: 1,\r\n    customer: 'Customer 1',\r\n    date: '2024-03-08', // Today's date for demonstration\r\n    items: [{ name: 'Product A', quantity: 2 }],\r\n    total: 200,\r\n    status: 'Pending',\r\n  },\r\n  {\r\n    id: 2,\r\n    customer: 'Customer 2',\r\n    date: '2024-03-06',\r\n    items: [{ name: 'Product B', quantity: 1 }],\r\n    total: 50,\r\n    status: 'Shipped',\r\n  },\r\n  // ...\r\n];\r\n\r\nfunction OrdersManagement() {\r\n  const [orders, setOrders] = useState(mockOrders);\r\n  const [selectedOrderId, setSelectedOrderId] = useState(null);\r\n  const [selectedOrderDetails, setSelectedOrderDetails] = useState(null);\r\n  const [currentDate, setCurrentDate] = useState(new Date()); // Today's date\r\n\r\n  const handleViewOrderDetails = (orderId) => {\r\n    const orderDetails = orders.find((order) => order.id === orderId);\r\n    setSelectedOrderId(orderId);\r\n    setSelectedOrderDetails(orderDetails);\r\n  };\r\n\r\n  const handleUpdateOrderStatus = (orderId, newStatus) => {\r\n    const updatedOrders = orders.map((order) =>\r\n      order.id === orderId ? { ...order, status: newStatus } : order\r\n    );\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  const handleDeleteOrder = (orderId) => {\r\n    const confirmed = window.confirm('Are you sure you want to delete this order?');\r\n    if (confirmed) {\r\n      const updatedOrders = orders.filter((order) => order.id !== orderId);\r\n      setOrders(updatedOrders);\r\n      setSelectedOrderId(null);\r\n      setSelectedOrderDetails(null);\r\n    }\r\n  };\r\n\r\n  const getOrderDate = (order) => new Date(order.date);\r\n\r\n  const renderOrderCalendar = () => {\r\n    const month = currentDate.getMonth();\r\n    const year = currentDate.getFullYear();\r\n\r\n    const firstDay = new Date(year, month, 1);\r\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n\r\n    const calendarRows = [];\r\n    let currentDay = 1;\r\n    let currentRow = [];\r\n\r\n    while (currentDay <= daysInMonth || currentRow.length < 7) {\r\n      const date = new Date(year, month, currentDay);\r\n      const formattedDate = date.toISOString().slice(0, 10); // YYYY-MM-DD\r\n\r\n      const orderForDate = orders.find((order) => getOrderDate(order).getTime() === date.getTime());\r\n\r\n      currentRow.push(\r\n        <div key={formattedDate} className={`day ${orderForDate ? 'active' : ''}`}>\r\n          {currentDay}\r\n          {orderForDate && (\r\n            <span className=\"order-indicator\" onClick={() => handleViewOrderDetails(orderForDate.id)}>\r\n              â€¢\r\n            </span>\r\n          )}\r\n        </div>\r\n      );\r\n\r\n      if (currentDay === daysInMonth || currentRow.length === 7) {\r\n        calendarRows.push(<div className=\"calendar-row\">{currentRow}</div>);\r\n        currentRow = [];\r\n      }\r\n      currentDay++;\r\n    }\r\n\r\n    return (\r\n      <div className=\"order-calendar\">\r\n        {calendarRows}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Orders Management</h2>\r\n      {renderOrderCalendar()}\r\n      <table>\r\n        {/* Rest of the order table and details logic... */}\r\n      </table>\r\n\r\n      {/* ... */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrdersManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}